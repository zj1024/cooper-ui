@import '../style/variable';

// button default variable
$--button-base-padding-v: 8;
$--button-base-padding-h: 20;
$--button-disabled-base: #bbb !default;

/**
 * Several different types set the initial color
 * @type {default | primary | success | warning | danger | info}
 */
$--button-default-color: $color-content;
$--button-default-bg: $bg-grey;
$--button-default-border: $bg-grey;

$--button-primary-color: $color-white;
$--button-primary-bg: $color-primary;
$--button-primary-border: $color-primary;

$--button-success-color: $color-white;
$--button-success-bg: $color-green;
$--button-success-border: $color-green;

$--button-warning-color: $color-white;
$--button-warning-bg: $color-yellow;
$--button-warning-border: $color-yellow;

$--button-danger-color: $color-white;
$--button-danger-bg: $color-red;
$--button-danger-border: $color-red;

$--button-info-color: $color-white;
$--button-info-bg: $color-grey;
$--button-info-border: $color-grey;

.coo-button {
  padding: #{$--button-base-padding-v}px #{$--button-base-padding-h}px;
  border: 1px solid;
  border-radius: $border-radius-middle;
  outline: none;
  transition: all 0.2s;
  cursor: pointer;

  &-is-round {
    border-radius: 50px;
  }

  &-is-circle {
    padding: 12px;
    border-radius: 50%;
  }

  &-loading-wrapper {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  &-loading {
    margin-right: 5px;

    > svg {
      animation: loadingMove 1s linear infinite;
    }
  }
}

@keyframes loadingMove {
  from {
    transform: rotate(0);
  }

  to {
    transform: rotate(360deg);
  }
}

@mixin button-disabled($color, $background-color, $border-color) {
  color: lighten($color, 30%);
  background: mix(mix($background-color, $color-white, 40%), $--button-disabled-base, 95%);
  border: mix($border-color, $--button-disabled-base, 10%);

  @if $background-color == $--button-default-bg {
    background: mix($background-color, $--button-disabled-base, 30%);
  }
}

@mixin button-color($color, $background-color, $border-color) {
  color: $color;
  background: $background-color;
  border-color: $border-color;

  &:hover,
  &:visited {
    background: darken($background-color, 5%);
    border-color: darken($border-color, 5%);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05), 0 4px 10px rgba($background-color, 0.25);
  }

  &:active {
    background: darken($background-color, 10%);
    border-color: darken($border-color, 10%);
    box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125) !important;
  }

  &:focus {
    box-shadow: 0 0 0 3px rgba($background-color, 0.15),
      0 3px 15px rgba(darken($background-color, 10%), 0.2), 0 2px 5px rgba(0, 0, 0, 0.2);
  }

  &.coo-button-has-shadow {
    box-shadow: 0 5px 15px 0px rgba($background-color, 0.3);
    &:focus {
      box-shadow: 0 0 0 3px rgba($background-color, 0.15),
        0 3px 15px rgba(darken($background-color, 10%), 0.2), 0 2px 5px rgba(0, 0, 0, 0.2);
    }
  }

  &.coo-button-is-plain {
    color: $background-color;
    background: $color-white;
    border-color: $border-color;
  }

  &:disabled {
    @include button-disabled($color, $background-color, $border-color);
    cursor: not-allowed;
    &:hover,
    &:focus,
    &:visited {
      @include button-disabled($color, $background-color, $border-color);
    }
    &:active {
      @include button-disabled($color, $background-color, $border-color);
    }
  }
}

@each $type in $color-types {
  .coo-button-#{$type} {
    @if $type == default {
      @include button-color(
        $--button-default-color,
        $--button-default-bg,
        $--button-default-border
      );
    }
    @if $type == warning {
      @include button-color(
        $--button-warning-color,
        $--button-warning-bg,
        $--button-warning-border
      );
    }
    @if $type == primary {
      @include button-color(
        $--button-primary-color,
        $--button-primary-bg,
        $--button-primary-border
      );
    }
    @if $type == success {
      @include button-color(
        $--button-success-color,
        $--button-success-bg,
        $--button-success-border
      );
    }
    @if $type == info {
      @include button-color($--button-info-color, $--button-info-bg, $--button-info-border);
    }
    @if $type == danger {
      @include button-color($--button-danger-color, $--button-danger-bg, $--button-danger-border);
    }
  }
}

// for button props = {type: default, isPlain={true}}
.coo-button-default.coo-button-is-plain {
  color: $color-content;
  background: $bg-white;
  border-color: $color-border;
  &:hover,
  &:focus {
    background: darken($bg-white, 10%);
    border-color: darken($color-border, 10%);
  }

  &:active {
    background: darken($bg-white, 5%);
    border-color: darken($color-border, 5%);
  }
}

.coo-button-group {
  display: flex;
  margin: 0;
  padding: 0;

  > .coo-button {
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 0;

    &:first-child {
      border-top-left-radius: $border-radius-middle;
      border-bottom-left-radius: $border-radius-middle;
    }

    &:last-child {
      border-top-right-radius: $border-radius-middle;
      border-bottom-right-radius: $border-radius-middle;
    }
  }

  // 这样写增加优先级
  &.coo-button-group-vertical {
    display: flex;
    flex-direction: column;
    > .coo-button {
      border-radius: 0;
      &:first-child {
        border-top-left-radius: $border-radius-middle;
        border-top-right-radius: $border-radius-middle;
      }

      &:last-child {
        border-bottom-left-radius: $border-radius-middle;
        border-bottom-right-radius: $border-radius-middle;
      }
    }
  }
}
